[
  {
    "Id": "627585",
    "ThreadId": "261346",
    "Html": "<p>Hey,</p>\n<p>First off I just wanted to say great job so far, and I think you've established a great concept that has so much potential for integration into build processes.</p>\n<p>&lt;/pleasantries&gt;</p>\n<p>&nbsp;</p>\n<p>That being said I am currently unable to use chirpy in my build configuration with its current set of options. &nbsp;Google Closure support without the ability to send in all my files with the</p>\n<p>\"--manage_closure_dependencies true\" flag (or its equivalent) hamstrings the utility of using the Closure compiler. &nbsp;I would love to fork this project and make the requisite modifications for better closure support however I would like to test the waters  on the&nbsp;feasibility&nbsp;of this before I waste my time...</p>\n<p>In short:</p>\n<p>Would it be possible to use a config file (example below) inside chirpy and have everything work as it should? &nbsp;Or would it make a ton of breaking changes to the point where I would be better off either starting from scratch or continuing to use my batch  files and build events...?</p>\n<p>Edit: Also, there needs to be an \"output\" of the errors / warnings that are&nbsp;generated...</p>\n<p>[file] chirpy.closure.config:</p>\n<p>--------------------------------------------------</p>\n<pre><span>&lt;</span><span>closure</span><span>&gt;</span>\n \n<span>\t&lt;</span><span>compile</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>output</span><span>&gt;</span><span>outputfile.min.js</span><span>&lt;/</span><span>output</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>compilation_level</span><span>&gt;</span><span>ADVANCED_OPTIMIZATIONS</span><span>&lt;/</span><span>compilation_level</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>summary_detail_level</span><span>&gt;</span><span>3</span><span>&lt;/</span><span>summary_detail_level</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>warning_level</span><span>&gt;</span><span>VERBOSE</span><span>&lt;/</span><span>warning_level</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>manage_closure_dependencies</span><span>&gt;</span><span>true</span><span>&lt;/</span><span>manage_closure_dependencies</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>output_wrapper</span><span>&gt;</span>\n<span>\t\t\t&lt;![CDATA[</span><span>(function(){%output%}());</span><span>]]&gt;</span>\n<span>\t\t&lt;/</span><span>output_wrapper</span><span>&gt;</span>\n<span>\t\t</span>\n<span>\t\t&lt;</span><span>define</span><span>&gt;</span><span>NAMESPACE.debug=false</span><span>&lt;/</span><span>define</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>define</span><span>&gt;</span><span>NAMESPACE.release=true</span><span>&lt;/</span><span>define</span><span>&gt;</span>\n \n<span>\t\t&lt;</span><span>file</span><span>&gt;</span><span>../src/file1.js</span><span>&lt;/</span><span>file</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>file</span><span>&gt;</span><span>../src/file2.js</span><span>&lt;/</span><span>file</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>folder</span><span>&gt;</span><span>../src/lib1/</span><span>&lt;/</span><span>folder</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>folder</span><span>&nbsp;</span><span>pattern</span><span>=</span><span>\"</span><span>*.src.js</span><span>\"</span><span>&nbsp;</span><span>ignore</span><span>=</span><span>\"</span><span>*.vsdoc.js</span><span>\"</span><span>&gt;</span><span>../src/lib2/</span><span>&lt;/</span><span>folder</span><span>&gt;</span>\n<span>\t\t</span>\n<span>\t&lt;/</span><span>compile</span><span>&gt;</span>\n \n<span>\t&lt;</span><span>compile</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>output</span><span>&gt;</span><span>outputfile.debug.js</span><span>&lt;/</span><span>output</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>compilation_level</span><span>&gt;</span><span>WHITESPACE_ONLY</span><span>&lt;/</span><span>compilation_level</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>formatting</span><span>&gt;</span><span>PRETTY_PRINT</span><span>&lt;/</span><span>formatting</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>formatting</span><span>&gt;</span><span>PRINT_INPUT_DELIMITER</span><span>&lt;/</span><span>formatting</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>manage_closure_dependencies</span><span>&gt;</span><span>true</span><span>&lt;/</span><span>manage_closure_dependencies</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>output_wrapper</span><span>&gt;</span>\n<span>\t\t\t&lt;![CDATA[</span><span>function&nbsp;_trace(x){window.console&nbsp;&amp;&amp;&nbsp;console.log(x)}%output%</span><span>]]&gt;</span>\n<span>\t\t&lt;/</span><span>output_wrapper</span><span>&gt;</span>\n \n<span>\t\t&lt;</span><span>define</span><span>&gt;</span><span>NAMESPACE.debug=true</span><span>&lt;/</span><span>define</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>define</span><span>&gt;</span><span>NAMESPACE.release=false</span><span>&lt;/</span><span>define</span><span>&gt;</span>\n \n<span>\t\t&lt;</span><span>file</span><span>&gt;</span><span>../src/file1.js</span><span>&lt;/</span><span>file</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>file</span><span>&gt;</span><span>../src/file2.js</span><span>&lt;/</span><span>file</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>folder</span><span>&gt;</span><span>../src/lib1/</span><span>&lt;/</span><span>folder</span><span>&gt;</span>\n<span>\t\t&lt;</span><span>folder</span><span>&nbsp;</span><span>pattern</span><span>=</span><span>\"</span><span>*.src.js</span><span>\"</span><span>&nbsp;</span><span>ignore</span><span>=</span><span>\"</span><span>*.vsdoc.js</span><span>\"</span><span>&gt;</span><span>../src/lib2/</span><span>&lt;/</span><span>folder</span><span>&gt;</span>\n \n<span>\t&lt;/</span><span>compile</span><span>&gt;</span>\n \n<span>&lt;/</span><span>closure</span><span>&gt;</span></pre>\n<p>------------------------------------------</p>\n<p>&nbsp;</p>\n<p>-- thanks for your time &amp; sorry for the verbosity... -chris</p>",
    "PostedDate": "2011-06-14T08:31:29.537-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "627863",
    "ThreadId": "261346",
    "Html": "<p>chirpy is not only for google closure compiler.</p>\r\n<p>Curing xml structure : http://chirpy.codeplex.com/SourceControl/changeset/view/d3bcc18be9d3#Xml%2fChirpy.Config.xsd</p>\r\n<p>Suggest :</p>\r\n<p>New attribute (<span>summary_detail_level</span>,<span>warning_level,</span><span>manage_closure_dependencies,</span><span>output_wrapper,</span><span>define</span>) in node</p>\r\n<p>or</p>\r\n<p>New attribute (custom_param_for_Google_compile)</p>\r\n<p>&nbsp;</p>\r\n<p><strong>\"Edit: Also, there needs to be an \"output\" of the errors / warnings that are&nbsp;generated...\"</strong></p>\r\n<p>In visual studio error/warning is show in output windows.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2011-06-14T18:54:34.257-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "629746",
    "ThreadId": "261346",
    "Html": "This discussion has been copied to a work item. Click <a href=\"http://chirpy.codeplex.com/workitem/85\">here</a> to go to the work item and continue the discussion.",
    "PostedDate": "2011-06-19T07:17:01.923-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "632824",
    "ThreadId": "261346",
    "Html": "<p>Test changeset : <a href=\"http://chirpy.codeplex.com/SourceControl/changeset/changes/b4493adffd73\">b4493adffd73</a></p>",
    "PostedDate": "2011-06-24T16:14:55.947-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]