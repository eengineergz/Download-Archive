{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "http://chirpy.codeplex.com/SourceControl/changeset/changes/de9705d70b8d",
    "ClosedDate": "2011-03-12T09:53:19.313-08:00",
    "CommentCount": 3,
    "Custom": null,
    "Description": "The various File.ReadAllText's throughout the source code were assuming the default (ASCII) encoding. I changed them to include Encoding.UTF8, which as web developers is what we should be working in anyway.\r\n\r\nhttp://chirpy.codeplex.com/SourceControl/network/Forks/Domenic/CoffeeScriptFixes",
    "LastUpdatedDate": "2017-12-09T07:44:01.02-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "chirpy",
    "ReportedDate": "2011-02-27T22:01:07.45-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Unicode characters don't pass through minification correctly",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 4,
    "Id": 60
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I had also this problem.\n\nTo resolve it a had to change in VSProjectItemManager.cs\nSystem.IO.File.WriteAllText(filename, (string)content);\nto\nSystem.IO.File.WriteAllText(filename, (string)content, System.Text.Encoding.UTF8);\n\nand also for yui YuiJsEngine.cs\nvar compressor = new JavaScriptCompressor(text, true, System.Text.Encoding.Default, System.Globalization.CultureInfo.InvariantCulture, false, reporter);\nto\nvar compressor = new JavaScriptCompressor(text, true, System.Text.Encoding.UTF8, System.Globalization.CultureInfo.InvariantCulture, false, reporter);\n\n",
      "PostedDate": "2011-03-04T00:58:49.797-08:00",
      "Id": 29979
    },
    {
      "Message": "http://msdn.microsoft.com/en-us/library/ms143368.aspx\n\"This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.\"",
      "PostedDate": "2011-03-07T15:07:19.97-08:00",
      "Id": 30128
    },
    {
      "Message": "Sorry, I little misunderstood original \"problem\" :-)\nReading the file is ok.\n\nThe main problem for me is using  System.Text.Encoding.Default in YUI, which messes up diacritics and the file is than saved in ANSI, and not in UTF-8.\nhttp://msdn.microsoft.com/en-us/library/system.text.encoding.default.aspx\n\n",
      "PostedDate": "2011-03-07T23:53:54.333-08:00",
      "Id": 30153
    }
  ]
}
