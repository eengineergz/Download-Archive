/// <reference path="D:\dotNetBangers\Nexus\Chronos.Web\Scripts\Intellisense\ext-intellisense-fix.js"/>
/// <reference path="D:\dotNetBangers\Nexus\Chronos.Web\Scripts\ext-base-debug.js"/>
/// <reference path="D:\dotNetBangers\Nexus\Chronos.Web\Scripts\ext-all-debug.js"/>

var RefresherTimer;

var MainViewportUi = Ext.extend(Ext.Viewport,
{
	layout: "border",
	stateful: true,
	initComponent: function ()
	{
		this.items = [
            {
            	xtype: "container",
            	contentEl: "Header",
            	region: "north",
            	height: 56,
            	id: "HeaderContainer"
            },
            {
            	xtype: "treepanel",
            	title: MainMenuTitle,
            	region: "west",
            	width: 200,
            	collapseMode: "mini",
            	minWidth: 150,
            	split: true,
            	rootVisible: false,
            	stateful: true,
            	animCollapse: true,
            	margins: "0 0 0 4",
            	id: "MainMenuTree",
            	root:
							{
								expanded: true,
								id: "RootNode"
							},
            	loader:
							{
								requestMethod: "POST",
								url: MainTreeLoaderUrl,
								listeners:
								{
									loadexception: function (me, node, response)
									{
										alert(response.statusText);
										window.location = LogonUrl;
									}
								}
							},
            	listeners:
							{
								click: function (node, e)
								{
									e.stopEvent();

									if(node.isLeaf())
									{
										var id = "Tab" + node.id;
										var tabPanel = Ext.getCmp("MainTabPanel");
										var tab = tabPanel.getComponent(id);

										if(tab)
										{
											tabPanel.setActiveTab(tab);
										}
										else
										{
											var p = tabPanel.add(
											{
												xtype: "iframepanel",
												iconCls: "icon" + id,
												id: id,
												title: node.attributes.text,
												loadMask: { msg: String.format(LoadingModuleText, node.attributes.text) },
												closable: true
											});

											tabPanel.setActiveTab(p);
											Ext.get(Ext.query("span.icon" + id)).applyStyles({ backgroundImage: "url(" + node.attributes.icon + ")" });
											p.update("<html><body style='margin:0;border:0;padding:0;'><iframe frameborder='0' width='100%' height='100%' src='" + node.attributes.href + "'/></body></html>");
										}
									}
									else
									{
										if(node.isExpanded())
										{
											node.collapse();
										}
										else
										{
											node.expand();
										}
									}
								}
							}
            },
            {
            	xtype: "tabpanel",
            	region: "center",
            	activeTab: 0,
            	stateful: true,
            	enableTabScroll: true,
            	plain: true,
            	margins: "0 4 0 0",
            	id: "MainTabPanel",
            	items:
							[
								{
									xtype: "iframepanel",
									iconCls: "icon-module",
									id: "HomeTab",
									defaultSrc: HomeUrl,
									title: HomeTabTitle,
									loadMask: { msg: String.format(LoadingModuleText, HomeTabTitle) },
									closable: false
								}
							]
            },
            {
            	xtype: "container",
            	autoEl: "div",
            	height: 12,
            	region: "south",
            	id: "FooterContainer",
            	html: "<p class='Footer'>&copy; 2010 by <a href='http://www.kodelsolutions.com' target='_blank'>Ködel Solutions</a> - Powered by Nexus Framework</p>"
            }
        ];

		MainViewportUi.superclass.initComponent.call(this);
	}
});

var MainViewport = Ext.extend(MainViewportUi,
{
	initComponent: function ()
	{
		MainViewport.superclass.initComponent.call(this);
	}
});

Ext.onReady(function ()
{
	Ext.state.Manager.setProvider(new Ext.state.CookieProvider(
	{
		expires: new Date(new Date().getTime() + 604800000)
	}));

	var mainViewport = new MainViewport({ renderTo: Ext.getBody() });

	mainViewport.show();

	RefresherTimer = window.setInterval(function ()
	{
		Ext.Ajax.request(
				{
					url: PingUrl,
					failure: function ()
					{
						window.location = LogonUrl;
					},
					success: function (r)
					{
						if(r.responseText != "True")
						{
							window.location = LogonUrl;
						}
					}
				});
	}, 60000);
});